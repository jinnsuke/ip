plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'checkstyle' // Checkstyle plugin applied here
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.0'
    runtimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.10.0'
    implementation 'org.openjfx:javafx-controls:20.0.1'
    implementation 'org.openjfx:javafx-fxml:20.0.1'

    String javaFxVersion = '17.0.7'

    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'linux'

}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"

        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true
        showStandardStreams = false
    }
}

application {
    mainClass.set("shoai.Main")
}

shadowJar {
    archiveBaseName.set("ShoAI")
    archiveClassifier.set("") // Setting classifier to an empty string for a fat JAR
    archiveVersion.set("") // Remove version from JAR file name if desired
}

run {
    standardInput = System.in
    jvmArgs = [
            '--module-path', classpath.asPath,
            '--add-modules', 'javafx.controls,javafx.fxml'
    ]
}

checkstyle {
    toolVersion = '10.2'
//    configFile = file('config/checkstyle/checkstyle.xml') // Path to Checkstyle configuration file
    // Optional: Suppressions configuration (if you use suppressions.xml)
    // configProperties = [suppressionsFile: file('config/checkstyle/suppressions.xml')]
}
